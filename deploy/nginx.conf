daemon off;

error_log /dev/stdout info;
worker_processes 1;

# user nobody nogroup;
pid /tmp/nginx.pid;

events {
	worker_connections 1024;
	accept_mutex off;
}

http {
	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#
	# http://kallithea.readthedocs.org/en/latest/setup.html#nginx-virtual-host-example
	#
	upstream kallithea-up {
		server 127.0.0.1:5000;
		# add more instances for load balancing
		#server 127.0.0.1:5001;
		#server 127.0.0.1:5002;
	}

## gist alias
#	server {
#		listen 80;
#		server_name gist.kallithea;
#		access_log /var/log/nginx/gist.access.log;
#		error_log /var/log/nginx/gist.error.log;

#		rewrite ^/(.+)$ $scheme://kallithea/_admin/gists/$1;
#		rewrite (.*) $scheme://kallithea/_admin/gists;
#	}

	server {
		listen 80 default_server;
		server_name _;
		#access_log /var/log/nginx/kallithea_access.log;
		#error_log /var/log/nginx/kallithea_error.log;

		## uncomment root directive if you want to serve static files by nginx
		## requires static_files = false in .ini file
		# maybe there is a better way to do this.
		root /srv/kallithea/venv/lib/python2.7/site-packages/kallithea/public;

		#ignore_invalid_headers off;

		client_max_body_size 0;  # allows users to push repositories of any size.
		client_body_buffer_size 128k;
		large_client_header_buffers 8 64k;
		proxy_redirect off;
		proxy_set_header Host $host;
		## needed for container auth
		#proxy_set_header REMOTE_USER $remote_user;
		#proxy_set_header X-Forwarded-User $remote_user;
		proxy_set_header X-Url-Scheme $scheme;
		proxy_set_header X-Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Proxy-host $proxy_host;
		proxy_buffering off;
		proxy_connect_timeout 7200;
		proxy_send_timeout 7200;
		proxy_read_timeout 7200;
		proxy_buffers 10 100k;

		# http://stackoverflow.com/questions/5100971/nginx-and-proxy-pass-send-connection-close-headers
		keepalive_requests 0;  # convinced nginx to send Connection: close.

		location / {
			try_files $uri @kallithea-app;
		}

		location @kallithea-app {
			proxy_pass http://kallithea-up;
		}
	}
}
